[project]
name = "python-ai-sis-assistant"
version = "0.1.0"
description = "Conversational AI Agent for IoT Smart Irrigation System in Colombia"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    # Web Framework
    "fastapi>=0.116.1",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    
    # Google ADK Integration  
    "google-adk>=0.3.0",
    "google-cloud-aiplatform>=1.38.0",
    "google-auth>=2.23.0",
    "google-api-core>=2.11.0",
    
    # HTTP Client
    "httpx>=0.25.0",
    "aiohttp>=3.9.0",
    
    # Database
    "asyncpg>=0.29.0",
    "databases[postgresql]>=0.8.0",
    "sqlalchemy[asyncio]>=2.0.0",
    "alembic>=1.12.0",
    
    # Caching
    "redis[hiredis]>=5.0.0",
    "aioredis>=2.0.0",
    
    # NLP and Text Processing
    "spacy>=3.7.0",
    "transformers>=4.35.0",
    "torch>=2.1.0",
    
    # Logging and Monitoring
    "structlog>=23.2.0",
    "prometheus-client>=0.19.0",
    
    # Utilities
    "python-multipart>=0.0.6",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "factory-boy>=3.3.0",
    "pytest-mock>=3.12.0",
    
    # Code Quality
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.7.0",
    "ruff>=0.1.6",
    
    # Development Tools
    "pre-commit>=3.5.0",
    "bandit>=1.7.5",
    "safety>=2.3.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.black]
line-length = 88
target-version = ["py312"]
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "transformers.*",
    "torch.*",
    "spacy.*",
    "factory_boy.*",
]
ignore_missing_imports = true

[tool.ruff]
target-version = "py312"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/__pycache__/*",
    "*/conftest.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\bProtocol\):",
    "@(abc\.)?abstractmethod",
]
